[app:main]
upload_root = ../files
test_root = lemontest/diagnostics
test_manifest = lemontest/test_manifest.json

use = egg:lemontest

pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.debug_templates = false
pyramid.default_locale_name = en
pyramid.includes = pyramid_tm
                   pyramid_celery

sqlalchemy.url = postgresql+psycopg2://lemon@/lemondb

BROKER_URL = "amqp://lemon:lemonpass@localhost:5672/lemon"
CELERY_RESULT_BACKEND = "database"
CELERY_RESULT_DBURI = "sqlite:///celery_result.db"
CELERYD_TASK_TIME_LIMIT = 300
CELERYD_CONCURRENCY = 9

[server:main]
use = egg:gunicorn#main
bind = unix:/var/run/gunicorn/lemontest.sock

# Begin logging configuration

[loggers]
keys = root, lemontest, sqlalchemy

[handlers]
keys = console, filelog

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = filelog

[logger_lemontest]
level = WARN
handlers = filelog
qualname = lemontest

[logger_sqlalchemy]
level = WARN
handlers = filelog
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_filelog]
class = FileHandler
args = ('/var/log/lemontest.log','a')
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s	%(levelname)-5.5s	[%(name)s]	%(message)s

# End logging configuration
