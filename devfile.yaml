schemaVersion: 2.1.0
metadata:
  name: inspector-django
  description: Django is a high-level Python web framework that enables rapid development
    of secure and maintainable websites. Built by experienced developers, Django takes
    care of much of the hassle of web development, so you can focus on writing your
    app without needing to reinvent the wheel. It is free and open source, has a thriving
    and active community, great documentation, and many options for free and paid-for
    support.
  version: 2.0.1
  displayName: Django
  projectType: Django
  language: Python
  provider: Red Hat
  icon: https://static.djangoproject.com/img/logos/django-logo-positive.svg
  tags:
  - Django
  - Python
  - Pip
attributes:
  persistVolumes: 'true'
projects:
- name: csd-inspector
  git:
    remotes:
      origin: 'ssh://git@github.com/thermofisher-jch/csd-inspector.git'
starterProjects:
- name: django-example
  git:
    remotes:
      origin: https://github.com/devfile-samples/python-django-ex
components:
- name: py-web
  container:
    args:
    - tail
    - -f
    - /dev/null
    endpoints:
    - name: http-django
      targetPort: 8000
    env:
    - name: DEBUG_PORT
      value: "5858"
    - value: /home/user
      name: HOME
    - value: dbowner
      name: DATABASE_USERNAME
    - value: abcd1234
      name: DATABASE_PASSWORD
    - value: postgres
      name: DATABASE_DBNAME
    - value: postgresql
      name: DATABASE_HOST
    - value: '5432'
      name: DATABASE_PORT
    - value: 'True'
      name: DEBUG
    - value: '*'
      name: ALLOWED_HOSTS
    - value: 4ThispocketIconic8lyP@rkedIns!de0utpublic
      name: SECRET_KEY
    - value: '${CHE_PROJECTS_ROOT}/csd-inspector/IonInspector;/home/user/.local/lib/python2.7/site-packages'
      name: PYTHONPATH
    # image: registry.access.redhat.com/ubi9/python-39:latest
    image: docker.io/jheinnic/che-python-2.7:afdcd09
    mountSources: true
- name: postgres-svc
  container:
    image: 'postgres:11.4-alpine'
    cpuLimit: '0.3'
    cpuRequest: '0.1'
    memoryLimit: 1536M
    memoryRequest: 1536M
    mountSources: false
    endpoints:
      - name: postgresql
        targetPort: 5432
    volumeMounts:
      - name: postgres-db
        path: /var/lib/postgresql
    env:
      - value: postgresql
        name: POSTGRES_USER
      - value: abcd1234
        name: POSTGRES_PASSWORD
      - value: inspector
        name: POSTGRES_DBNAME
      - value: '5432'
        name: POSTGRES_PORT
- name: postgres-db
  volume: {} 
commands:
- exec:
    commandLine: pip install -r requirements.txt
    component: py-web
    group:
      isDefault: true
      kind: build
    workingDir: ${PROJECT_SOURCE}
  id: pip-install-requirements
- exec:
    commandLine: python manage.py runserver 0.0.0.0:8000
    component: py-web
    group:
      isDefault: true
      kind: run
    workingDir: ${PROJECT_SOURCE}
  id: run-app
- exec:
    commandLine: python manage.py migrate
    component: py-web
    workingDir: ${PROJECT_SOURCE}
  id: run-migrations
- exec:
    commandLine: python manage.py makemigrations
    component: py-web
    workingDir: ${PROJECT_SOURCE}
  id: make-migrations
- exec:
    commandLine: pip install debugpy && export DEBUG_MODE=True && python -m debugpy
      --listen 0.0.0.0:${DEBUG_PORT} manage.py runserver 0.0.0.0:8000 --noreload --nothreading
    component: py-web
    group:
      kind: debug
    workingDir: ${PROJECT_SOURCE}
  id: debug
